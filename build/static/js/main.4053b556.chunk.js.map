{"version":3,"sources":["images/bg.jpg","Component/Weather.js","App.js","index.js"],"names":["useStyles","makeStyles","component","height","display","alignItems","width","marginLeft","marginRight","marginTop","backgroundColor","leftContainer","backgroundImage","logo","backgroundSize","borderRadius","rightContainer","background","Component","margin","container","row","padding","fontSize","letterSpacing","value","color","icon","error","information","fontWeight","button","Weather","props","classes","console","log","Box","className","Typography","name","country","temp","toFixed","humidity","Date","sunrise","toLocaleTimeString","sunset","condition","temp_max","temp_min","useStyle","App","useState","state","setstate","GetData","navigator","geolocation","getCurrentPosition","result","a","latitude","coords","longitude","apikey","fetch","method","then","response","json","weather","description","main","sys","useEffect","Button","onClick","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4053b556.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/bg.9c811a51.jpg\";","import React, { useEffect, useState } from 'react'\nimport { Box, makeStyles, Typography , Button } from \"@material-ui/core\"\nimport logo from '../images/bg.jpg'\nimport LocationOnIcon from '@material-ui/icons/LocationOn';\nimport SettingsBrightnessIcon from '@material-ui/icons/SettingsBrightness';\nimport OpacityIcon from '@material-ui/icons/Opacity';\nimport Brightness5Icon from '@material-ui/icons/Brightness5';\nimport Brightness6Icon from '@material-ui/icons/Brightness6';\nimport DehazeIcon from '@material-ui/icons/Dehaze';\nimport MinimizeIcon from '@material-ui/icons/Minimize';\nimport AddIcon from '@material-ui/icons/Add';\n\nconst useStyles = makeStyles({\n\n    component: {\n        height: '500px',\n        display: 'flex',\n        alignItems: \"center\",\n        width: '94%',\n        marginLeft: \"auto\",\n        marginRight: \"auto\",\n        marginTop: 30,\n        backgroundColor: \"fd9663\",\n        \n    },\n\n    leftContainer: {\n        backgroundImage: `url(${logo})`,\n        height: '100%',\n        width: '40%',\n        backgroundSize: \"cover\",\n        borderRadius: '20px 0 0 20px'\n    },\n\n    rightContainer: {\n        height: '100%',\n        width: '60%',\n        background: 'linear-gradient(to right,#e74c3c,#e67e22)',\n        borderRadius: '0 20px 20px 0'\n    },\n\n    Component: {\n        margin: '30px 60px'\n    },\n    container: {\n        display: 'flex',\n    },\n    row: {\n        padding: 10,\n        fontSize: 20,\n        letterSpacing: 2,\n        marginLeft : 70\n\n    },\n    value: {\n        color: '#fff'\n    },\n    icon: {\n        color: 'darkred',\n        marginRight: 15\n    },\n    error: {\n        background: 'red',\n        color: '#fff',\n        margin: 50,\n        padding: 20\n    },\n\n    information: {\n\n        marginTop : 20,\n        fontWeight : \"bold\"\n\n    },\n\n    button : {\n        marginLeft : 170\n    }\n})\n\n\n\nfunction Weather({ props }) {\n\n    const classes = useStyles()\n    console.log(\"Hello world\")\n    console.log(props)\n\n    return (\n        <>\n            <Box className={classes.component} >\n                <Box className={classes.leftContainer} >\n\n                </Box>\n                <Box className={classes.rightContainer} >\n\n                    <div  className = {classes.information}>\n                    <Typography className={classes.row}><LocationOnIcon className={classes.icon} />Location:  <Box className={classes.value} component=\"span\">{props.name} {props.country} </Box></Typography>\n                    <Typography className={classes.row}><SettingsBrightnessIcon className={classes.icon} />Temperature:  <Box className={classes.value} component=\"span\">{(props.temp - 273.00).toFixed(2)}°C </Box></Typography> \n                    <Typography className={classes.row}><OpacityIcon className={classes.icon} />Humidity:  <Box className={classes.value} component=\"span\">{props.humidity}% </Box></Typography>\n                    <Typography className={classes.row}><Brightness5Icon className={classes.icon} />Sun Rise:  <Box className={classes.value} component=\"span\">{new Date(props.sunrise * 1000).toLocaleTimeString()} </Box></Typography>\n                    <Typography className={classes.row}><Brightness6Icon className={classes.icon} />Sun Set: <Box className={classes.value} component=\"span\">{new Date(props.sunset * 1000).toLocaleTimeString()} </Box></Typography>\n                    <Typography className={classes.row}><DehazeIcon className={classes.icon} />Condition:  <Box className={classes.value} component=\"span\">{props.condition} </Box></Typography>\n                    <Typography className={classes.row}><AddIcon className={classes.icon} />Max Temperature:  <Box className={classes.value} component=\"span\">{(props.temp_max - 273.00).toFixed(2)}°C </Box></Typography>\n                    <Typography className={classes.row}><MinimizeIcon className={classes.icon} />Min Temperature:  <Box className={classes.value} component=\"span\">{(props.temp_min - 273.00).toFixed(2)}°C </Box></Typography>\n                    </div>\n\n                </Box>\n            </Box>\n        </>\n    )\n}\n\nexport default Weather\n","\nimport { useEffect, useState } from 'react';\nimport Weather from './Component/Weather';\nimport  {Button, makeStyles} from '@material-ui/core'\n\n\nconst useStyle = makeStyles({\n\n  button: {\n      marginLeft : 350,\n      background : 'linear-gradient(to right,#e74c3c,#e67e22)',\n      marginTop : 10,\n      color : \"white\",\n      \n  }\n})\n\n\nfunction App() {\n\n  const [state, setstate] = useState({})\n\n  function GetData() {\n\n    navigator.geolocation.getCurrentPosition(async (result) => {\n\n      console.log()\n      console.log()\n\n      var latitude = result.coords.latitude;\n      var longitude = result.coords.longitude;\n\n      try {\n        const apikey = \"7ed5494a7d851bd1c86357d5f172f5b6\"\n        console.log(`https://api.openweathermap.org/data/2.5/weather?lat=${latitude}&lon=${longitude}&appid=${apikey}`)\n        const response = await fetch(`https://api.openweathermap.org/data/2.5/weather?lat=${latitude}&lon=${longitude}&appid=${apikey}`, {\n          method: 'GET'\n        }).then(function (response) { return response.json(); })\n\n        console.log(response.weather[0].description)\n        console.log(\"Returning\")\n        setstate({\n          condition :  response.weather[0].description,\n          name: response.name,\n          humidity: response.main.humidity,\n          temp: response.main.temp,\n          temp_max: response.main.temp_max,\n          temp_min: response.main.temp_min,\n          sunrise: response.sys.sunrise,\n          sunset: response.sys.sunset,\n          country :  response.sys.country\n        })\n\n      }\n      catch (err) {\n        console.log(err)\n      }\n\n    }, (error) => {\n      console.log(error)\n    })\n  }\n\n  useEffect(() => {\n    GetData()\n  }, [])\n\n  const classes = useStyle()\n\n  return (\n    <>\n    <Weather props  = {state} ></Weather>\n    <Button className = {classes.button}  onClick = {()=>{\n      GetData()\n    }} >Refresh</Button>\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n"],"sourceRoot":""}